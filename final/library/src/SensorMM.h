/******************************************************************************\
 * Authors: Thomas Dufour, Jean-Raphael Matte
 * Name: Sensor.h
 * Description: This class reads data from the rangefinders using the ADC and
 *              converts the voltage to a usable distance, in mm.
 * 
 * Version: 1.0
\******************************************************************************/

#ifndef SENSOR_MM_H
#define SENSOR_MM_H

#include <avr/io.h>
#include "Adc.h"

volatile const uint16_t DISTANCES[1024] = {
	800,	800,	800,	800,	800,	800,	800,	800,	
	800,	800,	800,	800,	800,	800,	800,	800,	
	800,	800,	800,	800,	800,	800,	800,	800,	
	800,	800,	800,	800,	800,	800,	800,	800,	
	800,	800,	800,	800,	800,	800,	800,	800,	
	800,	800,	800,	800,	800,	800,	800,	800,	
	800,	800,	800,	800,	800,	800,	800,	800,	
	800,	800,	800,	800,	800,	800,	800,	800,	
	800,	800,	800,	800,	800,	800,	800,	800,	
	800,	800,	800,	800,	800,	800,	800,	800,	
	800,	800,	800,	800,	800,	800,	800,	800,	
	800,	800,	800,	800,	800,	800,	800,	800,	
	797,	788,	780,	772,	764,	756,	748,	741,	
	733,	726,	719,	712,	705,	699,	692,	686,	
	679,	673,	667,	661,	655,	649,	643,	638,	
	632,	627,	621,	616,	611,	606,	601,	596,	
	591,	586,	582,	577,	572,	568,	564,	559,	
	555,	551,	546,	542,	538,	534,	530,	526,	
	523,	519,	515,	511,	508,	504,	501,	497,	
	494,	490,	487,	484,	480,	477,	474,	471,	
	468,	465,	462,	459,	456,	453,	450,	447,	
	444,	442,	439,	436,	433,	431,	428,	426,	
	423,	420,	418,	415,	413,	411,	408,	406,	
	403,	401,	399,	397,	394,	392,	390,	388,	
	386,	383,	381,	379,	377,	375,	373,	371,	
	369,	367,	365,	363,	361,	360,	358,	356,	
	354,	352,	350,	349,	347,	345,	343,	342,	
	340,	338,	337,	335,	333,	332,	330,	328,	
	327,	325,	324,	322,	321,	319,	318,	316,	
	315,	313,	312,	310,	309,	308,	306,	305,	
	303,	302,	301,	299,	298,	297,	295,	294,	
	293,	292,	290,	289,	288,	286,	285,	284,	
	283,	282,	280,	279,	278,	277,	276,	275,	
	273,	272,	271,	270,	269,	268,	267,	266,	
	265,	264,	263,	262,	260,	259,	258,	257,	
	256,	255,	254,	253,	252,	251,	250,	250,	
	249,	248,	247,	246,	245,	244,	243,	242,	
	241,	240,	239,	238,	238,	237,	236,	235,	
	234,	233,	232,	232,	231,	230,	229,	228,	
	227,	227,	226,	225,	224,	224,	223,	222,	
	221,	220,	220,	219,	218,	217,	217,	216,	
	215,	214,	214,	213,	212,	212,	211,	210,	
	209,	209,	208,	207,	207,	206,	205,	205,	
	204,	203,	203,	202,	201,	201,	200,	199,	
	199,	198,	197,	197,	196,	196,	195,	194,	
	194,	193,	193,	192,	191,	191,	190,	190,	
	189,	188,	188,	187,	187,	186,	186,	185,	
	184,	184,	183,	183,	182,	182,	181,	181,	
	180,	180,	179,	178,	178,	177,	177,	176,	
	176,	175,	175,	174,	174,	173,	173,	172,	
	172,	171,	171,	170,	170,	169,	169,	168,	
	168,	168,	167,	167,	166,	166,	165,	165,	
	164,	164,	163,	163,	162,	162,	162,	161,	
	161,	160,	160,	159,	159,	159,	158,	158,	
	157,	157,	156,	156,	156,	155,	155,	154,	
	154,	153,	153,	153,	152,	152,	151,	151,	
	151,	150,	150,	150,	149,	149,	148,	148,	
	148,	147,	147,	146,	146,	146,	145,	145,	
	145,	144,	144,	144,	143,	143,	142,	142,	
	142,	141,	141,	141,	140,	140,	140,	139,	
	139,	139,	138,	138,	138,	137,	137,	137,	
	136,	136,	136,	135,	135,	135,	134,	134,	
	134,	133,	133,	133,	132,	132,	132,	131,	
	131,	131,	131,	130,	130,	130,	129,	129,	
	129,	128,	128,	128,	127,	127,	127,	127,	
	126,	126,	126,	125,	125,	125,	125,	124,	
	124,	124,	123,	123,	123,	123,	122,	122,	
	122,	122,	121,	121,	121,	120,	120,	120,	
	120,	119,	119,	119,	119,	118,	118,	118,	
	118,	117,	117,	117,	116,	116,	116,	116,	
	115,	115,	115,	115,	114,	114,	114,	114,	
	113,	113,	113,	113,	113,	112,	112,	112,	
	112,	111,	111,	111,	111,	110,	110,	110,	
	110,	109,	109,	109,	109,	109,	108,	108,	
	108,	108,	107,	107,	107,	107,	107,	106,	
	106,	106,	106,	105,	105,	105,	105,	105,	
	104,	104,	104,	104,	103,	103,	103,	103,	
	103,	102,	102,	102,	102,	102,	101,	101,	
	101,	101,	101,	100,	100,	100,	100,	100,	
	99,	99,	99,	99,	99,	98,	98,	98,	
	98,	98,	97,	97,	97,	97,	97,	97,	
	96,	96,	96,	96,	96,	95,	95,	95,	
	95,	95,	94,	94,	94,	94,	94,	94,	
	93,	93,	93,	93,	93,	93,	92,	92,	
	92,	92,	92,	91,	91,	91,	91,	91,	
	91,	90,	90,	90,	90,	90,	90,	89,	
	89,	89,	89,	89,	89,	88,	88,	88,	
	88,	88,	88,	87,	87,	87,	87,	87,	
	87,	86,	86,	86,	86,	86,	86,	86,	
	85,	85,	85,	85,	85,	85,	84,	84,	
	84,	84,	84,	84,	84,	83,	83,	83,	
	83,	83,	83,	82,	82,	82,	82,	82,	
	82,	82,	81,	81,	81,	81,	81,	81,	
	81,	80,	80,	80,	80,	80,	80,	80,	
	79,	79,	79,	79,	79,	79,	79,	79,	
	78,	78,	78,	78,	78,	78,	78,	77,	
	77,	77,	77,	77,	77,	77,	76,	76,	
	76,	76,	76,	76,	76,	76,	75,	75,	
	75,	75,	75,	75,	75,	75,	74,	74,	
	74,	74,	74,	74,	74,	74,	73,	73,	
	73,	73,	73,	73,	73,	73,	72,	72,	
	72,	72,	72,	72,	72,	72,	71,	71,	
	71,	71,	71,	71,	71,	71,	71,	70,	
	70,	70,	70,	70,	70,	70,	70,	70,	
	69,	69,	69,	69,	69,	69,	69,	69,	
	68,	68,	68,	68,	68,	68,	68,	68,	
	68,	67,	67,	67,	67,	67,	67,	67,	
	67,	67,	67,	66,	66,	66,	66,	66,	
	66,	66,	66,	66,	65,	65,	65,	65,	
	65,	65,	65,	65,	65,	65,	64,	64,	
	64,	64,	64,	64,	64,	64,	64,	64,	
	63,	63,	63,	63,	63,	63,	63,	63,	
	63,	63,	62,	62,	62,	62,	62,	62,	
	62,	62,	62,	62,	61,	61,	61,	61,	
	61,	61,	61,	61,	61,	61,	61,	60,	
	60,	60,	60,	60,	60,	60,	60,	60,	
	60,	59,	59,	59,	59,	59,	59,	59,	
	59,	59,	59,	59,	58,	58,	58,	58,	
	58,	58,	58,	58,	58,	58,	58,	58,	
	57,	57,	57,	57,	57,	57,	57,	57,	
	57,	57,	57,	56,	56,	56,	56,	56,	
	56,	56,	56,	56,	56,	56,	56,	55,	
	55,	55,	55,	55,	55,	55,	55,	55,	
	55,	55,	55,	54,	54,	54,	54,	54,	
	54,	54,	54,	54,	54,	54,	54,	54,	
	53,	53,	53,	53,	53,	53,	53,	53,	
	53,	53,	53,	53,	53,	52,	52,	52,	
	52,	52,	52,	52,	52,	52,	52,	52
};

class SensorMM {
public:
	
	/**
	 * \brief constructor
	 * \return a Sensor
	 */
	SensorMM();
	
	/**
	 * \brief give the reading of the left sensor
	 * \return the reading of the left sensor, in mm
	 */
	uint16_t getDistanceL();
	
	/**
	 * \brief give the reading of the right sensor
	 * \return the reading of the right sensor, in mm
	 */
	uint16_t getDistanceR();

private:
	
	/**
	 * \brief gives the distance reading of a sensor connected to the selected
	 *        pin
	 * \param pin the pin on which the sensor is connected
	 */
	uint16_t getDistance(uint8_t pin);

	Adc adc_;
	
	static const uint8_t PIN_L = 6;
	static const uint8_t PIN_R = 7;

};

#endif
